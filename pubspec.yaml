name: todo
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.2.1 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6

  # Configuration
  flutter_dotenv: ^5.1.0
  collection: ^1.18.0
  package_info_plus: ^5.0.1

  # Localization
  easy_localization: ^3.0.0

  # State management
  bloc: ^8.1.2
  flutter_bloc: ^8.1.3
  equatable: ^2.0.5
  flutter_value_notifier: ^1.5.1

  # DI
  get_it: ^7.2.0
  injectable: ^2.1.0

  # Local database
  shared_preferences: ^2.2.2

  # Networking
  retrofit: ^4.0.3
  dio: ^5.3.4
  pretty_dio_logger: ^1.3.1
  json_annotation: ^4.4.0
  json_serializable: ^6.1.1
  either_dart: ^1.0.0

  # UI
  flutter_screenutil: ^5.5.3+2
  flutter_svg: ^2.0.9
  google_fonts: ^6.1.0
  skeletons: ^0.0.3
  flutter_spinkit: ^5.2.1
  pull_to_refresh: ^2.0.0
  dropdown_button2: ^2.3.9
  permission_handler: ^11.3.1
  device_info_plus: ^9.1.0
  animated_bottom_navigation_bar: ^1.3.3
  lottie: ^3.1.2
  table_calendar: ^3.0.9
  entry: ^1.0.0
  flutter_launcher_icons: ^0.13.1
  fl_chart: ^0.68.0
  percent_indicator: ^4.2.3
  drag_and_drop_lists: ^0.4.1
  flutter_slidable: ^3.1.1
  intl: ^0.18.1
  adaptive_theme: ^3.6.0
  flutter_time_picker_spinner: ^2.0.0
  just_audio: ^0.9.39
  flutter_local_notifications: ^17.2.1+2


  #image
  cached_network_image: ^3.3.1
  fluttertoast: ^8.2.5
  image_picker: ^1.0.8


  #firebase
  firebase_core: ^2.27.0
  cloud_firestore: ^4.15.8
  google_sign_in: ^6.2.1
  firebase_auth: ^4.17.8



dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0
  build_runner: ^2.4.7
  injectable_generator: ^2.1.4
  retrofit_generator: ^8.0.4
  flutter_gen_runner: ^5.3.2
  lint_staged: ^0.5.1
  husky: ^0.1.7

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/icons/
    - assets/translations/
    - assets/animation_icon/
    - assets/music/
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages


flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/images/icon_app.png"
  min_sdk_android: 21

flutter_gen:
  integrations:
    flutter_svg: true

lint_staged:
  'lib/**.dart': dart format -l 120 && dart analyze --fatal-infos --fatal-warnings